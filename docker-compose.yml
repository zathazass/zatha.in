version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/traefik/acme.json:/letsencrypt/acme.json
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic_config.yml:/etc/traefik/dynamic_config.yml
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    networks:
      - web
  
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=zatha.settings
    volumes:
      - .:/app
    depends_on:
      - db
    networks:
      - web

  db:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: zatha
      POSTGRES_PASSWORD: zass2455
      POSTGRES_DB: zathadotin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Link your custom Nginx configuration file
      - ./staticfiles:/app/staticfiles       # Ensure static files are mapped correctly
    depends_on:
      - django
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`zatha.in`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"  # Nginx serves on port 80

volumes:
  postgres_data:

networks:
  web:
